package SINGLE_FILE;

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Single3 {
    public static void main(String[] args) {
        String srcFilePath = "/Users/kavana/eclipse-workspace/REGEX_VALIDTION/src/test/java/SINGLE_FILE/Single_SRC.txt"; // Source file path
        String tgtFilePath = "/Users/kavana/eclipse-workspace/REGEX_VALIDTION/src/test/java/SINGLE_FILE/Single_TGT.txt"; // Target file path

        try {
            // Read the text from the source file (input)
            StringBuilder srcStringBuilder = new StringBuilder();
            BufferedReader srcBufferedReader = new BufferedReader(new FileReader(srcFilePath));
            String srcLine;
            int srcLineNumber = 0; // Initialize source file line number
            while ((srcLine = srcBufferedReader.readLine()) != null) {
                srcLineNumber++; // Increment line number
                srcStringBuilder.append(srcLine).append("\n");
            }
            srcBufferedReader.close();

            String srcText = srcStringBuilder.toString();

            // Read the text from the target file (patterns)
            StringBuilder tgtStringBuilder = new StringBuilder();
            BufferedReader tgtBufferedReader = new BufferedReader(new FileReader(tgtFilePath));
            String tgtLine;
            int tgtLineNumber = 0; // Initialize target file line number
            while ((tgtLine = tgtBufferedReader.readLine()) != null) {
                tgtLineNumber++; // Increment line number
                tgtStringBuilder.append(tgtLine).append("\n");
            }
            tgtBufferedReader.close();

            String tgtText = tgtStringBuilder.toString();

            // Define the regex pattern to extract input from source file
            Pattern inputPattern = Pattern.compile("\"(.*?)\"");
            Matcher inputMatcher = inputPattern.matcher(srcText);

            // Define the regex pattern to extract patterns from target file
            Pattern patternPattern = Pattern.compile("\"(.*?)\"");
            Matcher patternMatcher = patternPattern.matcher(tgtText);

            boolean filesIdentical = srcText.equals(tgtText); // Check if files are identical

            // Match regex inputs from source file with patterns from target file
            while (inputMatcher.find() && patternMatcher.find()) {
                String input = inputMatcher.group(1);
                String pattern = patternMatcher.group(1);
                System.out.println("Input: " + input);
                System.out.println("Pattern: " + pattern);
                if (input.matches(pattern)) {
                    System.out.println("Matched!");
                } else {
                    System.out.println("Not Matched!");
                    System.out.println("Mismatched at Source File Line " + srcLineNumber + ": " + input);
                    System.out.println("Mismatched at Target File Line " + tgtLineNumber + ": " + pattern);
                }
                System.out.println();
            }

            // Print whether files are identical
            if (filesIdentical) {
                System.out.println("Files are identical.");
            } else {
                System.out.println("Files are not identical.");
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
}
