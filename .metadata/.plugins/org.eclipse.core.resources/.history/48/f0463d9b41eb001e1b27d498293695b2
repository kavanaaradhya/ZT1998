package SINGLE_FILE;

import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.List;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Single {

    // Function to compare content of a file against multiple regex patterns from different files
    public static void compareRegexInFiles(String sourceFilePath, List<String> regexFilePaths, String dataType) {
        try {
            // Read content from the source file
            String content = new String(Files.readAllBytes(Paths.get(sourceFilePath))).trim();
            System.out.println(dataType + " from source file: " + content);

            // Perform matching for each regex pattern file
            for (String regexFilePath : regexFilePaths) {
                // Read regex pattern from the target file
                String regexPattern = new String(Files.readAllBytes(Paths.get(regexFilePath))).trim();
                System.out.println("Regex pattern from file: " + regexPattern);

                // Compile the regex pattern
                Pattern pattern = Pattern.compile(regexPattern);

                // Create matcher for the content
                Matcher matcher = pattern.matcher(content);

                // Perform matching
                boolean match = matcher.matches();

                // Output comparison result
                if (match) {
                    System.out.println("The " + dataType + " matches the regex pattern in file: " + regexFilePath);
                } else {
                    System.out.println("The " + dataType + " does not match the regex pattern in file: " + regexFilePath);
                }
            }

        } catch (IOException e) {
            System.err.println("An error occurred while reading files: " + e.getMessage());
            e.printStackTrace();
        }
    }

    public static void main(String[] args) {
        // Example usage for email comparison
        String sourceFilePath = "/Users/kavana/eclipse-workspace/REGEX_VALIDTION/src/test/java/SINGLE_FILE/Single_SRC.txt";
        List<String> regexEmailFilePaths = List.of(
                "/Users/kavana/eclipse-workspace/REGEX_VALIDTION/src/test/java/EMAIL_REGEX/Email_tgt1.txt",
                "/Users/kavana/eclipse-workspace/REGEX_VALIDTION/src/test/java/EMAIL_REGEX/Email_tgt2.txt"
        );
        compareRegexInFiles(sourceFilePath, regexEmailFilePaths, "Email");

        // Example usage for URL comparison
        List<String> regexUrlFilePaths = List.of(
                "/Users/kavana/eclipse-workspace/REGEX_VALIDTION/src/test/java/URL_REGEX/Url_tgt1.txt",
                "/Users/kavana/eclipse-workspace/REGEX_VALIDTION/src/test/java/URL_REGEX/Url_tgt2.txt"
        );
        compareRegexInFiles(sourceFilePath, regexUrlFilePaths, "URL");

        // Example usage for phone number comparison
        List<String> regexPhoneFilePaths = List.of(
                "/Users/kavana/eclipse-workspace/REGEX_VALIDTION/src/test/java/REGEX/Phone_num_tgt1.txt",
                "/Users/kavana/eclipse-workspace/REGEX_VALIDTION/src/test/java/REGEX/Phone_num_tgt2.txt"
        );
        compareRegexInFiles(sourceFilePath, regexPhoneFilePaths, "Phone number");
    }
}
